package com.cibertec.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;


import com.cibertec.app.entity.Producto;
import com.cibertec.app.service.CategoriaService;

import com.cibertec.app.service.ProductoService;



@Controller
public class ProductoController {
 
	@Autowired
	private ProductoService productoService;

	@Autowired
	private CategoriaService categoriaService;

	@GetMapping("/producto")
	public String listProductos(Model model) {
	    model.addAttribute("productos", productoService.getAllProducto());
	    model.addAttribute("categoriaList", categoriaService.getAllCategoria());        
	    return "producto/index";
	}  
	    
	@GetMapping("/producto/new")
	public String createProducto(Model model){	        
	    // este objeto Student almacenara los valores 
	    Producto producto = new Producto();	       
	    model.addAttribute("producto", producto);	        
	    model.addAttribute("categoriaList", categoriaService.getAllCategoria());	        
	    return "producto/create";	     
	}	
	
	@PostMapping("/producto")
	public String saveProducto(@ModelAttribute("producto") Producto producto) {		 
		productoService.guardarProducto(producto);		 
	    return "redirect:/producto";
	}
	
	@GetMapping("/producto/edit/{id}")
	    public String editInventario(@PathVariable Integer id, Model model) {
	    Producto in = productoService.findProductoById(id);	       
	    model.addAttribute("producto", in);	 
	    model.addAttribute("categoriaList", categoriaService.getAllCategoria());	        
	    return "producto/edit";
	}	
	
	@PostMapping("/producto/{id}")
	public String updateCliente(@PathVariable Integer id, 
	    @ModelAttribute("inventario") Producto producto,
	    Model model) {
	    //sacar el esudiante de la b.d. por el id
	    Producto existentIn = productoService.findProductoById(id);
	    // cargarlo
		existentIn.setIdprod(id);
		existentIn.setNomProd(producto.getNomProd());
		existentIn.setIdcate(producto.getIdcate());
		existentIn.setStock(producto.getIdprod());
	    
	    // guardar el estudiante actualizado
		productoService.updateProductoById(existentIn);
	    return "redirect:/producto";
	}	    
	
	

	

	
	
	
	
}
